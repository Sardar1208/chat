{"version":3,"sources":["logo.svg","AppContext.js","components/Messages/Messages.js","Utils/index.js","components/ChatHeads/ChatHead.js","components/LeftNav/LeftNav.js","components/RightNav/RightNav.js","components/FriendsDiv/FriendsDiv.js","components/PendingRequests/PendingRequests.js","components/OnBoarding/OnBoarding.js","components/ChatInput/ChatInput.js","components/TextPage/TextPage.js","components/Login/Login.js","components/Signup/Signup.js","components/SignIn/Signin.js","Pages/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["AppContext","React","createContext","scroll","lastElmRef","behavior","console","log","current","scrollIntoView","Messages","props","useContext","currentContact","useState","setTotalMsg","finalMsg","setfinalMsg","showDown","setShowDown","useEffect","a","commonMsg","map","i","date","Date","parseInt","time","temp","toLocaleTimeString","split","slice","data","sender","toDateString","totalMsg","pendingMsg","totalMsg2","concat","temp2","splice","length","className","onScroll","e","target","clientHeight","scrollHeight","scrollTop","value","key","prevArr","ref","onClick","src","width","Profiles","A","B","C","D","E","F","getUnreadCount","conversationIds","setUnreadCount","fetch","method","headers","get","body","JSON","stringify","conversation_IDs","sender_ID","sessionStorage","getItem","res2","json","result2","result","tempObj","conversation_ID","unread_count","lastMessage","setContacts","setConversationIds","from","reciever_mobile","res","convoIds","ChatHead","useHistory","usersList","SetUsersList","contacts","setCurrentContact","userSocket","unreadCount","list","user","mobile","loadMessages","emit","user_mobile","contact_mobile","avatar","name","style","display","LeftNav","loggedInUsername","pendingRequestcolor","function","RightNav","MENU_ID","show","useContextMenu","id","href","animation","fade","Unfriend","FriendsDiv","type","placeholder","reqSentObj","color","onKeyPress","searchContact","onChange","setfriendsText","friendsText","content","PendingRequests","noReqDisplay","setNoReqDisplay","pendingDisplay","setPendingDisplay","activeDisplay","setActiveDisplay","pendingTabStyleValues","setPendingTabStyleValues","activeTabStyleValues","setActiveTabStyleValues","activeRequestsList","setActiveRequestsList","pendingTabStyle","fontWeight","borderColor","activeTabStyle","getContacts","listOfRequests","requests","request","sender_avatar","sender_name","respond_request","sender_mobile","on","setRequestList","allActiveRequests","activeRequests","reciever_avatar","reciever_name","deleteActiveRequest","requestList","OnBoarding","username","ChatInput","textQueue","setTextQueue","textValue","setTextValue","queueText","text","recieverID","socket_ID","now","setcommonMsg","current_chat","setTextQueueOpen","textQueueOpen","sendText","TextPage","history","setLoggedInUsername","setpendingMsg","setRequests","setActiveRequests","addFriendDisplay","setaddFriendDisplay","pendingRequestDisplay","setpendingRequestDisplay","chatsDisplay","setchatsDisplay","pending_text_in","reqSentDisplay","setReqSentDisplay","setReqSentObj","setPendingRequestColor","add_friendStyles","pendingRequestStyles","unfriended_username","status","response","pending_requests","texts","messages","msg","msg_time","pending_texts","pending_messages","listOfPendingRequests","req_status","senderName","names","filter","j","mobile_no","recieverName","fullName","avatarFlag","listOfActiveRequests","sender_username","reciever_uniqueKey","once","info","newContacts","push","Object","keys","Login","setuserSocket","setMobile","email","setEmail","setUsername","socketID","setsocketID","loadingDisplay","setLoadingDisplay","loginDisplay","setLoginDisplay","loginDivDisplay","setLoginDivDisplay","addDetailsDisplay","setaddDetailsDisplay","loadingStyle","loginStyle","addDetailsStyle","loginDivStyle","CheckSignin","setItem","socket","io","localUsername","Spinner","role","Signin","Signup","setFullName","fullNameValidation","setFullNameValidation","userName","setUserName","usernameValidation","setUsernameValidation","emailValidation","setEmailValidation","mobileValidation","setMobileValidation","password","setPassword","passwordValidation","setPasswordValidation","validated","SignUp","setLoginSection","AuthorizeUser","token","uniqueKey","setLoggedInMobile","SignIn","setUniqueKey","accessToken","Tag","useRef","tagName","isLink","Landing","loginSection","App","loggedInMobile","AppState","Provider","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3345dee4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\n\nexport const AppContext = React.createContext();\n","import React, { useEffect, useState, useRef, useContext } from \"react\";\nimport { AppContext } from \"../../AppContext\";\n\n// TODD - improve the frontend of unread messages div.\nexport function scroll(lastElmRef, behavior = \"smooth\") {\n  console.log(\"behaviour: \", behavior);\n  if (lastElmRef.current) {\n    lastElmRef.current.scrollIntoView({ behavior });\n  }\n}\n\nfunction Messages(props) {\n  const { lastElmRef, currentContact } = useContext(AppContext);\n  const [totalMsg, setTotalMsg] = useState([]);\n  const [finalMsg, setfinalMsg] = useState([]);\n  const [showDown, setShowDown] = useState(false);\n  //   const lastElmRef = useRef(null);\n\n  useEffect(() => {\n    scroll(lastElmRef, \"auto\");\n  }, [finalMsg]);\n\n  useEffect(async () => {\n    // console.log(\"commonMsg are: \", props.commonMsg);\n    // console.log(\"pendingMsg are: \", props.pendingMsg);\n    let totalMsg = await props.commonMsg.map((i) => {\n      const date = new Date(parseInt(i.time));\n      const temp = date.toLocaleTimeString().split(\" \");\n      const temp2 = temp[0].slice(0, -3);\n      const time = temp2 + \" \" + temp[1];\n      return {\n        data: i.data,\n        sender: i.sender,\n        time: time,\n        date: date.toDateString().slice(4),\n      };\n    });\n    let totalMsg2 = await props.pendingMsg.map((i) => {\n      const date = new Date(parseInt(i.time));\n      const temp = date.toLocaleTimeString().split(\" \");\n      const temp2 = temp[0].slice(0, -3);\n      const time = temp2 + \" \" + temp[1];\n      return {\n        data: i.data,\n        sender: i.sender,\n        time: time,\n        date: date.toDateString().slice(4),\n      };\n    });\n    let temp = totalMsg.concat(totalMsg2);\n    setTotalMsg(temp);\n    const temp2 = totalMsg;\n    setfinalMsg(temp2.splice(temp2.length - 25, 25));\n    // setfinalMsg(temp);\n  }, [props.pendingMsg, props.commonMsg]);\n\n  return (\n    <div\n      className=\"messages bg-white overflow-auto relative\"\n      onScroll={(e) => {\n        console.log(\"scrolling\", e.target.clientHeight);\n        if (\n          e.target.scrollHeight - (e.target.scrollTop + e.target.clientHeight) >\n          500\n        ) {\n          setShowDown(true);\n        }\n\n        if (\n          e.target.scrollHeight - (e.target.scrollTop + e.target.clientHeight) <\n          500\n        ) {\n          setShowDown(false);\n        }\n\n        // if (e.target.scrollTop == 0) {\n        //   // TODO - make the splice dynamic.\n        //   // TODO - Set the scrollTop to the where it was before expanding the list.\n        //   const pastHeight = e;\n        //   let temp = totalMsg;\n        //   setfinalMsg(temp.splice(temp.length - 50, 50));\n        //   e = pastHeight;\n        // }\n      }}\n    >\n      {finalMsg.map((value, key, prevArr) => {\n        return (\n          <>\n            {prevArr[key - 1]?.date !== prevArr[key].date ? (\n              <span className=\"justify-center flex\">\n                <span className=\"bg-cyan-100 px-3 py-1 rounded-xl text-xs text-cyan-500\">\n                  {prevArr[key].date}\n                </span>\n              </span>\n            ) : null}\n            <div className=\"\">\n              <div\n                key={key + \"-\" + value.data}\n                className={\n                  (value.sender == \"me\"\n                    ? \"bg-violet-500 text-white ml-auto mr-8 rounded-l-2xl rounded-br-2xl relative\"\n                    : \"bg-blueGray-200 max-w-2xl mr-auto ml-8 rounded-r-2xl rounded-bl-2xl relative\") +\n                  \" my-3 px-4 py-3 break-words chat-bubble\"\n                }\n              >\n                {value.sender == \"me\" ? (\n                  <div className=\"border-violet-500 triangle absolute top-0 -right-4\"></div>\n                ) : (\n                  <div className=\"border-blueGray-200 triangle absolute top-0 -left-4\"></div>\n                )}\n                <div className=\"break-words www\">{value.data}</div>\n\n                <div\n                  className={\n                    value.sender == \"me\"\n                      ? \"text-tiny text-violet-200 text-right\"\n                      : \"text-tiny text-gray-500 text-right\"\n                  }\n                >\n                  {value.time}\n                </div>\n\n                {/* <span className=\"-mr-6 flex text-right text-tiny text-violet-200\">\n                    {value.time}\n                  </span> */}\n              </div>\n            </div>\n          </>\n        );\n      })}\n      {/* {console.log(\"lastelemref: \", lastElmRef)} */}\n      <div ref={lastElmRef} className=\"mt-12\"></div>\n      {showDown ? (\n        <div\n          onClick={() => {\n            scroll(lastElmRef);\n          }}\n          className=\"fixed bottom-20 flex justify-center items-center w-9/12 cursor-pointer\"\n        >\n          <img src=\"/svg/down.svg\" width=\"24px\" />\n        </div>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n\nexport default Messages;\n","export const RandomProfile = () => {\n  const rno = (Math.floor(Math.random() * 24) % 6) + 1;\n  return `/svg/Profile${rno}.svg`;\n};\n\nexport const Profiles = {\n  A: \"/svg/Profile1.svg\",\n  B: \"/svg/Profile2.svg\",\n  C: \"/svg/Profile3.svg\",\n  D: \"/svg/Profile4.svg\",\n  E: \"/svg/Profile5.svg\",\n  F: \"/svg/Profile6.svg\",\n};\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n  Link,\n} from \"react-router-dom\";\nimport \"./ChatHead.css\";\nimport { scroll } from \"../Messages/Messages.js\";\nimport { Profiles } from \"../../Utils\";\nimport { AppContext } from \"../../AppContext\";\n\nexport async function getUnreadCount(conversationIds, setUnreadCount) {\n  console.log(\"running getunreadcount\");\n  const res2 = await fetch(\"http://localhost:8080/get_data\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      get: \"pending_messages\",\n    },\n    body: JSON.stringify({\n      conversation_IDs: conversationIds,\n      sender_ID: sessionStorage.getItem(\"loggedInMobile\"),\n    }),\n  });\n\n  const result2 = await res2.json();\n  console.log(\"the wait is here: \", result2.result);\n  let tempObj = {};\n  for (let i of result2.result) {\n    // console.log(\"this is i here: \", i.unread_count);\n    // console.log(\"hihi\");\n    // let temp = [...unreadCount, { unread_count: i[0].unread_count, conversation_ID: i[0].conversation_ID }];\n    const temp = tempObj;\n    temp[i.conversation_ID] = [i.unread_count, i.lastMessage];\n    tempObj = temp;\n    // setUnreadCount(temp);\n  }\n  console.log(\"the new state: \", tempObj);\n  setUnreadCount(tempObj);\n}\n\nexport async function getContacts(setContacts, setConversationIds, from) {\n  console.log(\"from :\", from);\n  const res = await fetch(\"http://localhost:8080/get_data\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      get: \"users\",\n    },\n    body: JSON.stringify({\n      reciever_mobile: sessionStorage.getItem(\"loggedInMobile\"),\n    }),\n  });\n\n  const result = await res.json();\n  setContacts(result.result);\n  if (result.result != \"no users\") {\n    console.log(\"the new result is::\", from);\n\n    const convoIds = result.result.map((i) => {\n      return i.conversation_ID;\n    });\n\n    setConversationIds(convoIds);\n  }\n}\n\nfunction ChatHead(props) {\n  const history = useHistory();\n  const [usersList, SetUsersList] = useState();\n  // const [unreadCount, setUnreadCount] = useState({});\n  // const [conversationIds, setConversationIds] = useState([]);\n  const {\n    contacts,\n    setContacts,\n    setCurrentContact,\n    userSocket,\n    lastElmRef,\n    unreadCount,\n    setUnreadCount,\n    conversationIds,\n    setConversationIds,\n  } = useContext(AppContext);\n\n  // useEffect(async () => {\n  //   if (contacts.length == 0) {\n  //     //get all the contacts\n  //     console.log(\"getting contacts\");\n  //     getContacts(setContacts, setConversationIds, \"chathead init\");\n  //   }\n  // }, []);\n\n  useEffect(() => {\n    console.log(\"getting unread count\");\n    getUnreadCount(conversationIds, setUnreadCount);\n  }, [conversationIds]);\n\n  useEffect(() => {\n    console.log(\"making final list\", contacts);\n    if (contacts.length > 0 && contacts != \"no users\") {\n      let list = contacts.map((user) => {\n        if (user) {\n          console.log(\"dog cat: \", unreadCount);\n          return (\n            <div\n              className=\"chat-head mb-2 hover:bg-violet-500 group grid grid-cols-10 bg-white-400 shadow-md p-4 mx-3 rounded-xl \"\n              onClick={() => {\n                setCurrentContact(user);\n                props.loadMessages(user.conversation_ID);\n                openChat(user.mobile);\n              }}\n            >\n              <div className=\"card-img col-span-2\">\n                <img src={`${Profiles[user.avatar]}`} />\n              </div>\n              <div className=\"card-text col-span-7 text-white\">\n                <div className=\"text-body\">\n                  <h1 className=\"text-black group-hover:text-white text-2xl\">\n                    {user.name}\n                  </h1>\n                  <h5 className=\"group-hover:text-violet-200 text-gray-500 text-base\">\n                    {unreadCount[`${user.conversation_ID}`] &&\n                    unreadCount[`${user.conversation_ID}`][1]\n                      ? unreadCount[`${user.conversation_ID}`][1]\n                      : \"No chat history\"}\n                  </h5>\n                </div>\n              </div>\n              <div className=\"unread col-span-1\">\n                <div>\n                  <span>\n                    {unreadCount[`${user.conversation_ID}`] &&\n                    unreadCount[`${user.conversation_ID}`][0] > 0\n                      ? unreadCount[`${user.conversation_ID}`][0]\n                      : \"\"}\n                  </span>\n                </div>\n              </div>\n\n              {/* <hr /> */}\n            </div>\n          );\n        }\n      });\n      if (list.length == contacts.length) {\n        SetUsersList(list);\n      }\n    }\n  }, [unreadCount, contacts]);\n\n  function openChat(mobile) {\n    scroll(lastElmRef);\n    userSocket.emit(\"update_current_chat\", {\n      user_mobile: sessionStorage.getItem(\"loggedInMobile\"),\n      contact_mobile: mobile,\n    });\n  }\n\n  return (\n    <div className=\"my-2\" style={{ display: props.display }}>\n      {console.log(\"rendered\")}\n      {usersList}\n    </div>\n  );\n}\n\nexport default ChatHead;\n","import React from \"react\";\nimport { AppContext } from \"../../AppContext\";\n\nfunction LeftNav(props) {\n  const { loggedInUsername } = React.useContext(AppContext);\n\n  let pendingButtonStyles = {\n    border: \"2px solid\",\n    borderColor: props.pendingRequestcolor,\n    transition: \"borderColor 0.3s ease\",\n  };\n\n  return (\n    <div className=\"left-navbar bg-violet-500 shadow\">\n      <div>\n        <span className=\"font-semibold text-2xl pl-4 text-white\">{loggedInUsername}</span>\n      </div>\n      <div className=\"h-full flex w-1/2 justify-between\">\n        <button\n          className=\"relative inline-block requests-btn flex-1 justify-center flex items-center hover:bg-violet-600\"\n          onClick={() => {\n            props.function(\"chats\");\n          }}\n        >\n          <img src=\"/svg/people.svg\" width=\"25px\" />\n          <span className=\"tooltip-text absolute bg-gray-800 text-gray-100 shadow text-center rounded-lg top-full z-10 -right-3 mt-2 w-20\">\n            Chat\n          </span>\n        </button>\n\n        <button\n          className=\"relative inline-block add-friend-btn flex-1 justify-center flex items-center hover:bg-violet-600\"\n          onClick={() => {\n            props.function(\"add_friend\");\n          }}\n        >\n          <img src=\"/svg/add.svg\" width=\"25px\" />\n          <span className=\"tooltip-text absolute bg-gray-800 text-gray-100 shadow text-center rounded-lg z-10 top-full -right-4 mt-2 w-24\">\n            Add Friends\n          </span>\n        </button>\n\n        <button\n          className=\"relative inline-block requests-btn flex-1 justify-center flex items-center hover:bg-violet-600\"\n          onClick={() => {\n            props.function(\"pending_requests\");\n          }}\n          // style={pendingButtonStyles}\n        >\n          <img src=\"/svg/friends.svg\" width=\"25px\" />\n          <span className=\"tooltip-text absolute bg-gray-800 text-gray-100 shadow text-center rounded-lg z-100 top-full -right-1 mt-2 w-20\">\n            Requests\n          </span>\n        </button>\n\n      </div>\n    </div>\n  );\n}\n\nexport default LeftNav;\n","import React from \"react\";\nimport { AppContext } from \"../../AppContext\";\nimport { Profiles } from \"../../Utils\";\nimport {\n  Menu,\n  Item,\n  Separator,\n  Submenu,\n  useContextMenu,\n  animation,\n} from \"react-contexify\";\nimport \"react-contexify/dist/ReactContexify.css\";\n\nfunction RightNav(props) {\n  const { currentContact } = React.useContext(AppContext);\n  const MENU_ID = \"menu-id\";\n  const { show } = useContextMenu({\n    id: MENU_ID,\n  });\n  function handleItemClick({ event, props, triggerEvent, data }) {\n    console.log(event, props, triggerEvent, data);\n  }\n  function displayMenu(e) {\n    // put whatever custom logic you need\n    // you can even decide to not display the Menu\n    show(e);\n  }\n\n  \n\n  return (\n    <div className=\"my-navbar bg-violet-50 shadow-lg flex\">\n      <img\n        src={`${Profiles[currentContact.avatar]}`}\n        className=\"profile-img ml-4\"\n      />\n      <a href=\"/home\">\n        <h3 className=\"text-gray-700 text-2xl\">{currentContact.name}</h3>\n      </a>\n      <div className=\"ml-auto mr-4\" onClick={displayMenu}>\n        <img src=\"/svg/options.svg\" width=\"25px\" />\n      </div>\n      <Menu id={MENU_ID} animation={animation.fade} className=\"mt-4 mr-4\">\n        <Item onClick={()=>{props.Unfriend(currentContact.conversation_ID, currentContact.name)}}>Unfriend</Item>\n      </Menu>\n    </div>\n  );\n}\n\nexport default RightNav;\n","import React from \"react\";\n\nfunction FriendsDiv(props) {\n  return (\n    <div className=\"friends-innerdiv px-4 flex justify-center align-center flex-col\">\n      <h3 className=\"friends-heading text-violet-800\">\n        You can add friends using their username or password. Note it's case\n        sensitive.\n      </h3>\n      <input\n        type=\"text\"\n        placeholder=\"Enter Username/Ph.no\"\n        className={\n          \"text-base w-full px-3 py-2.5 placeholder-blueGray-300 text-blueGray-600 border-2 rounded bg-white rounded text-sm outline-none focus:outline-none focus:ring \" +\n          (props.reqSentObj.color === \"red\"\n            ? \"border-red-400\"\n            : \"border-blueGray-300\")\n        }\n        onKeyPress={(e) => {\n          if (e.key === \"Enter\") {\n            console.log(\"wel wel wel\");\n            props.searchContact();\n          }\n        }}\n        onChange={(e) => {\n          props.setfriendsText(e.target.value);\n        }}\n        value={props.friendsText}\n        // style={{borderColor: props.reqSentObj.color}}\n      />\n      <span className=\"text-xs ml-2\" style={{ color: props.reqSentObj.color }}>\n        {props.reqSentObj.content}\n      </span>\n\n      <div className=\"m-auto\">\n        <button\n          className=\"bg-violet-500 mt-4 px-4 py-2 text-md font-semibold rounded-xl text-white shadow-md\"\n          onClick={props.searchContact}\n        >\n          Send Request\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default FriendsDiv;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { AppContext } from \"../../AppContext\";\nimport { Profiles } from \"../../Utils\";\nimport { getContacts } from \"../ChatHeads/ChatHead.js\";\n\nfunction PendingRequests(props) {\n  const { contacts, setContacts, setConversationIds } = useContext(AppContext);\n  const [noReqDisplay, setNoReqDisplay] = useState(\"none\");\n  const [pendingDisplay, setPendingDisplay] = useState(\"none\");\n  const [activeDisplay, setActiveDisplay] = useState(\"none\");\n  const [pendingTabStyleValues, setPendingTabStyleValues] = useState([\n    \"black\",\n    \"600\",\n    \"blue\",\n  ]);\n  const [activeTabStyleValues, setActiveTabStyleValues] = useState([\n    \"gray\",\n    \"600\",\n    \"transparent\",\n  ]);\n  const [activeRequestsList, setActiveRequestsList] = useState([]);\n\n  let pendingTabStyle = {\n    color: pendingTabStyleValues[0],\n    fontWeight: pendingTabStyleValues[1],\n    borderColor: pendingTabStyleValues[2],\n  };\n  let activeTabStyle = {\n    color: activeTabStyleValues[0],\n    fontWeight: activeTabStyleValues[1],\n    borderColor: activeTabStyleValues[2],\n  };\n\n  useEffect(() => {\n    getContacts(setContacts, setConversationIds, \"PendingRequests\");\n\n    //TODO - run this when the app loads\n    let listOfRequests = props.requests.map((request) => {\n      if (request) {\n        return (\n          <div className=\"request-block bg-white mt-2 mx-3 rounded-xl overflow-hidden shadow-md\">\n            <div className=\"flex items-center p-3\">\n              <img src={Profiles[request.sender_avatar]} width=\"70px\" />\n              <span className=\"pl-2 text-xl\">{request.sender_name}</span>\n            </div>\n\n            <div className=\"flex bg-violet-500 flex-col\">\n              <button\n                className=\"p-1 accept-btn flex-1 px-3 hover:bg-violet-600\"\n                onClick={() => {\n                  props.respond_request(\"accepted\", request.sender_mobile);\n                }}\n              >\n                <img src=\"/svg/sent.svg\" width=\"30px\" />\n              </button>\n              {/* <hr className=\"m-auto w-3/4 p-0 bg-violet-200\"></hr> */}\n              <button\n                className=\"p-1 decline-btn flex-1 px-3\"\n                on\n                onClick={() => {\n                  props.respond_request(\"declined\", request.sender_mobile);\n                }}\n              >\n                <img src=\"/svg/cross.svg\" width=\"30px\" />\n              </button>\n            </div>\n          </div>\n        );\n      }\n    });\n    if (listOfRequests.length == 0) {\n      setNoReqDisplay(\"flex\");\n    } else {\n      setNoReqDisplay(\"none\");\n    }\n    props.setRequestList(listOfRequests);\n  }, [props.requests]);\n\n  useEffect(() => {\n    let allActiveRequests = props.activeRequests.map((i) => {\n      if (i) {\n        return (\n          <div className=\"request-block bg-white mt-2 mx-3 rounded-xl overflow-hidden shadow-md\">\n            <div className=\"flex items-center p-3\">\n              <img src={Profiles[i.reciever_avatar]} width=\"70px\" />\n              <span className=\"pl-2 text-xl\">{i.reciever_name}</span>\n            </div>\n\n            <div className=\"flex bg-violet-500 flex-col\">\n              <button\n                className=\"p-1 decline-btn flex-1 px-3\"\n                on\n                onClick={() => {\n                  props.deleteActiveRequest(i.reciever_mobile);\n                }}\n              >\n                <img src=\"/svg/cross.svg\" width=\"30px\" />\n              </button>\n            </div>\n          </div>\n        );\n      }\n    });\n    if (allActiveRequests.length == 0) {\n      setNoReqDisplay(\"flex\");\n    } else {\n      setNoReqDisplay(\"none\");\n    }\n    setActiveRequestsList(allActiveRequests);\n  }, [props.activeRequests]);\n\n  return (\n    <div className=\"h-full bg-violet-50\">\n      <div className=\"flex justify-center bg-white mb-4\">\n        <span\n          onClick={() => {\n            setActiveTabStyleValues([\"grey\", \"default\", \"transparent\"]);\n            setPendingTabStyleValues([\"black\", \"600\", \"blue\"]);\n            setActiveDisplay(\"none\");\n            setPendingDisplay(\"block\");\n          }}\n          className=\"text-lg flex-1 mx-2 py-2 text-center text-gray-500 border-blue-200 border-b-2 cursor-default hover:text-black hover:border-black hover:cursor-pointer pending-tab\"\n          style={pendingTabStyle}\n        >\n          RECEIVED\n        </span>\n        <span\n          onClick={() => {\n            setPendingTabStyleValues([\"grey\", \"default\", \"transparent\"]);\n            setActiveTabStyleValues([\"black\", \"600\", \"blue\"]);\n            setPendingDisplay(\"none\");\n            setActiveDisplay(\"block\");\n          }}\n          className=\"flex-1 text-lg mx-2 py-2 text-center text-gray-500 border-blue-200 border-b-2 cursor-default hover:text-black hover:border-black hover:cursor-pointer active-tab\"\n          style={activeTabStyle}\n        >\n          SENT\n        </span>\n      </div>\n\n      <div className=\"h-full\" style={{ display: activeDisplay }}>\n        <div\n          className=\"no-req h-full m-auto flex\"\n          style={{ display: noReqDisplay }}\n        >\n          <h4 className=\"text-center m-auto self-center text-gray-600\">\n            There are no active requests.\n          </h4>\n        </div>\n        <div>{activeRequestsList}</div>\n      </div>\n\n      <div className=\"h-full\" style={{ display: pendingDisplay }}>\n        <div\n          className=\"no-req h-full m-auto flex\"\n          style={{ display: noReqDisplay }}\n        >\n          <h4 className=\"text-center m-auto self-center text-gray-600\">\n            There are no pending friend requests.\n          </h4>\n        </div>\n        <div>{props.requestList}</div>\n      </div>\n    </div>\n  );\n}\n\nexport default PendingRequests;\n","import React from \"react\";\n\nfunction OnBoarding(props) {\n  return (\n    <div className=\"flex bg-white items-center justify-center flex-col font-sans text-gray-500 text-lg \">\n      <img src=\"/svg/logo.svg\" />\n      <h1 className=\"text-4xl font-bold text-gray-700 tracking-wider mb-10\">\n        Hey! {props.username}\n      </h1>\n      <p className=\"text-xl font-bold\">\n        Welcome to converse, Here are some tips to get you started\n      </p>\n      <ul className=\"list-disc\">\n        <li>\n          <p className=\"mb-0.5\">\n            Head to the left section to select the person you want to chat with\n          </p>\n        </li>\n        <li>\n          <p>Click on the add friend icon on top-left to add friends</p>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default OnBoarding;\n","import React, { useEffect } from \"react\";\nimport { AppContext } from \"../../AppContext\";\nimport { scroll } from \"../Messages/Messages.js\";\n\nfunction ChatInput(props) {\n  const { currentContact, userSocket, lastElmRef, textQueue, setTextQueue } =\n    React.useContext(AppContext);\n  const [textValue, setTextValue] = React.useState(\"\");\n  // const [textQueue, setTextQueue] = React.useState([]);\n\n  // sent text goes in texts array/queue.\n  // when the first message is sent, it updates the array/queue.\n  // Then, the new message is taken from the array ans is sent.\n\n  useEffect(() => {\n    console.log(\"textQueueOpen: \", props.textQueueOpen);\n    if (props.textQueueOpen == true && textQueue.length > 0) {\n      console.log(\"initiating sending procedure...\");\n      props.setTextQueueOpen(false);\n      sendText(textQueue[0]);\n    }\n  }, [textQueue]);\n\n  async function queueText() {\n    if (textValue.length > 0) {\n      const text = {\n        // recieverID: `${result.socket_ID}`,\n        text: `${textValue}`,\n        reciever_mobile: `${currentContact.mobile}`,\n        conversation_ID: `${currentContact.conversation_ID}`,\n        // sender_ID: `${sessionStorage.getItem(\"loggedInMobile\")}`,\n      };\n      setTextValue(\"\");\n      setTextQueue([...textQueue, text]);\n    }\n  }\n\n  async function sendText(text) {\n    const res = await fetch(\"http://localhost:8080/get_data\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        get: \"socketID\",\n      },\n      body: JSON.stringify({\n        reciever_mobile: `${text.reciever_mobile}`,\n      }),\n    });\n    const result = await res.json();\n    if (result.result == \"success\") {\n      userSocket.emit(\"texty\", {\n        recieverID: `${result.socket_ID}`,\n        text: `${text.text}`,\n        reciever_mobile: `${text.reciever_mobile}`,\n        conversation_ID: `${text.conversation_ID}`,\n        sender_ID: `${sessionStorage.getItem(\"loggedInMobile\")}`,\n      });\n      const temp = [\n        ...props.commonMsg,\n        { sender: \"me\", data: text.text, time: Date.now() },\n      ];\n      props.setcommonMsg(temp);\n      console.log(\"and the lucky number is: \", result.current_chat);\n\n      scroll(lastElmRef);\n    }else{\n      props.setTextQueueOpen(true);\n    }\n  }\n\n  return (\n    <div className=\"flex flex-start bg-white items-center pb-3\">\n      <div className=\"mb-1 pt-1 flex relative flex-1\">\n        <input\n          type=\"text\"\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              queueText();\n            }\n          }}\n          placeholder=\"Type a message\"\n          className=\"text-base ml-4 mr-12 px-3 py-2.5 placeholder-blueGray-300 text-blueGray-600 border rounded border-blueGray-300 bg-transparent rounded text-sm outline-none focus:outline-none focus:ring w-full\"\n          onChange={(e) => {\n            setTextValue(e.target.value);\n          }}\n          value={textValue}\n        />\n      </div>\n      <div\n        className=\"mr-4 bg-violet-500 px-4 py-2.5 rounded-xl\"\n        onClick={queueText}\n      >\n        <img src=\"/svg/send.svg\" width=\"24px\" />\n      </div>\n    </div>\n  );\n}\n\nexport default ChatInput;\n","import React, { useEffect } from \"react\";\nimport \"./TextPage.css\";\nimport ChatHead, { getUnreadCount } from \"../ChatHeads/ChatHead\";\nimport LeftNav from \"../LeftNav/LeftNav\";\nimport RightNav from \"../RightNav/RightNav\";\nimport FriendsDiv from \"../FriendsDiv/FriendsDiv\";\nimport PendingRequests from \"../PendingRequests/PendingRequests\";\nimport Messages from \"../Messages/Messages\";\nimport OnBoarding from \"../OnBoarding/OnBoarding.js\";\nimport { scroll } from \"../Messages/Messages.js\";\nimport { AppContext } from \"../../AppContext\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n  Link,\n} from \"react-router-dom\";\nimport ChatInput from \"../ChatInput/ChatInput\";\n\nfunction TextPage() {\n  const history = useHistory();\n  const {\n    userSocket,\n    setUnreadCount,\n    unreadCount,\n    conversationIds,\n    setLoggedInUsername,\n    currentContact,\n    lastElmRef,\n    textQueue,\n    setTextQueue,\n    contacts,\n    setContacts,\n  } = React.useContext(AppContext);\n  const [friendsText, setfriendsText] = React.useState(\"\");\n  const [commonMsg, setcommonMsg] = React.useState([]);\n  const [pendingMsg, setpendingMsg] = React.useState([]);\n  const [requests, setRequests] = React.useState([]);\n  const [activeRequests, setActiveRequests] = React.useState([]);\n  const [requestList, setRequestList] = React.useState([]);\n  const [addFriendDisplay, setaddFriendDisplay] = React.useState(\"none\");\n  const [pendingRequestDisplay, setpendingRequestDisplay] =\n    React.useState(\"none\");\n  const [chatsDisplay, setchatsDisplay] = React.useState(\"block\");\n  const [pending_text_in, setPending_text_in] = React.useState(true);\n  const [textQueueOpen, setTextQueueOpen] = React.useState(true);\n  const [reqSentDisplay, setReqSentDisplay] = React.useState(\"none\");\n  const [reqSentObj, setReqSentObj] = React.useState({\n    color: \"transparent\",\n    content: \"\",\n  });\n  const [pendingRequestcolor, setPendingRequestColor] =\n    React.useState(\"rgb(228, 228, 231)\");\n\n  const add_friendStyles = {\n    display: addFriendDisplay,\n  };\n\n  const pendingRequestStyles = {\n    display: pendingRequestDisplay,\n  };\n\n  // whenever there is a new msg, updates the msg state\n  useEffect(async () => {\n    let unmounted = false;\n    if (!unmounted) {\n      if (!userSocket) {\n        console.log(\"in here brouh\");\n        history.push(\"/\");\n      } else {\n        userSocket.once(\"incoming-text\", (data) => {\n          console.log(\"incoming-text\");\n          let temp = [\n            ...commonMsg,\n            { sender: data.sender_ID, data: data.text, time: data.time },\n          ];\n          let temp2 = unreadCount;\n          temp2[data.conversation_ID] = [0, data.text];\n          setUnreadCount(temp2);\n          setcommonMsg(temp);\n        });\n        userSocket.on(\"incoming-pending-text\", (data) => {\n          //TODO - this signal is not working fix this\n          // TODO - re render chat head on this signal\n          console.log(\"got it hululululu\");\n          getUnreadCount(conversationIds, setUnreadCount);\n          // setPending_text_in(!pending_text_in);\n        });\n        userSocket.once(\"recieving_request\", (data) => {\n          console.log(\"got a new friend request: \", data);\n          setPendingRequestColor(\"rgb(121, 121, 233)\");\n        });\n        userSocket.once(\"deleted active request\", (data) => {\n          console.log(\"info: \", data.info);\n          pending_requests();\n        });\n        userSocket.on(\"text-sent\", (data) => {\n          if (textQueue.length > 0) {\n            console.log(\"text sent: \", textQueue);\n            let temp = [...textQueue];\n            temp.splice(0, 1);\n            setTextQueue(temp);\n            setTextQueueOpen(true);\n          }\n        });\n        userSocket.on(\"request-sent\", (data) => {\n          console.log(\"request sent\");\n          if (data.info == \"success\") {\n            setReqSentDisplay(\"block\");\n            setReqSentObj({ color: \"green\", content: \"Friend request sent\" });\n            setfriendsText(\"\");\n          } else {\n            setReqSentDisplay(\"block\");\n            setReqSentObj({ color: \"red\", content: \"User not found\" });\n          }\n        });\n        userSocket.on(\"unfriended\", (data) => {\n          console.log(\"you have been unfriended\");\n          const newContacts = contacts.map((i) => {\n            if(i.conversation_ID != data.conversation_ID){\n              return i;\n            }\n          });\n          console.log(\"new contacts: \", newContacts);\n          setContacts(newContacts);\n        });\n        userSocket.on(\"unfriend done\", (data) => {\n          console.log(\"you have unfirended someone\");\n          const newContacts = contacts.map((i) => {\n            if(i.conversation_ID != data.conversation_ID){\n              return i;\n            }\n          });\n          console.log(\"new contacts: \", newContacts);\n          setContacts(newContacts);\n        });\n      }\n    }\n    return () => {\n      unmounted = true;\n    };\n  }, [commonMsg]);\n\n  async function Unfriend(conversation_ID, username) {\n    userSocket.emit(\"unfriend\", {\n      conversation_ID: conversation_ID,\n      unfriended_username: username,\n      mobile: sessionStorage.getItem(\"loggedInMobile\"),\n    });\n  }\n\n  // accept or decline requests\n  async function respond_request(status, sender) {\n    console.log(\"in here\");\n    const res = await fetch(\"http://localhost:8080/respond_request\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        sender_mobile: `${sender}`,\n        reciever_mobile: sessionStorage.getItem(\"loggedInMobile\"),\n        response: status,\n      }),\n    });\n    const result = await res.json();\n    if (result.result == \"success\") {\n      pending_requests();\n    }\n  }\n\n  function encryptText(text) {\n    const algorithm = \"aes-192-cbc\";\n  }\n\n  // switches between different tabs\n  function openTab(name) {\n    if (name == \"add_friend\") {\n      setchatsDisplay(\"none\");\n      setpendingRequestDisplay(\"none\");\n      setaddFriendDisplay(\"flex\");\n      // setReqSentDisplay(\"none\")\n    } else if (name == \"pending_requests\") {\n      pending_requests();\n      setchatsDisplay(\"none\");\n      setaddFriendDisplay(\"none\");\n      setpendingRequestDisplay(\"block\");\n    } else if (name == \"chats\") {\n      setchatsDisplay(\"block\");\n      setaddFriendDisplay(\"none\");\n      setpendingRequestDisplay(\"none\");\n    }\n  }\n\n  async function loadMessages(conversation_ID) {\n    const user = sessionStorage.getItem(\"loggedInMobile\");\n    const res = await fetch(\"http://localhost:8080/get_data\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        get: \"messages\",\n      },\n      body: JSON.stringify({\n        conversation_ID: `${conversation_ID}`,\n        sender_ID: `${user}`,\n      }),\n    });\n    const result = await res.json();\n    if (result.result == \"success\") {\n      console.log(\"messages in this convo: \", result);\n      const texts = result.messages.map((text) => {\n        let sender = \"\";\n        if (text.sender_ID == user) {\n          sender = \"me\";\n        } else {\n          sender = text.sender_ID;\n        }\n        return {\n          sender: `${sender}`,\n          data: `${text.msg}`,\n          time: `${text.msg_time}`,\n        };\n      });\n\n      const pending_texts = result.pending_messages.map((text) => {\n        let sender = \"\";\n        if (text.sender_ID == user) {\n          sender = \"me\";\n        } else {\n          sender = text.sender_ID;\n        }\n        return {\n          sender: `${sender}`,\n          data: `${text.msg}`,\n          time: `${text.msg_time}`,\n        };\n      });\n      console.log(\"the final texts are: \", texts);\n      // setpendingMsg(pending_texts);\n      setcommonMsg([...texts, ...pending_texts]);\n      scroll(lastElmRef);\n      // let temp = [...props.commonMsg, ...props.pendingMsg]\n      // console.log(\"temp: \", temp);\n      // props.setcommonMsg(temp);\n      // props.setpendingMsg([]);\n    }\n  }\n\n  // gets and shows all the pending requests\n  async function pending_requests() {\n    console.log(\"running pending requests...\");\n    const res = await fetch(\"http://localhost:8080/get_data\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        get: \"pending_requests\",\n      },\n      body: JSON.stringify({\n        mobile: `${sessionStorage.getItem(\"loggedInMobile\")}`,\n      }),\n    });\n    const result = await res.json();\n    let listOfPendingRequests = result.result?.map((i) => {\n      if (\n        i.reciever_mobile == sessionStorage.getItem(\"loggedInMobile\") &&\n        i.req_status == \"pending\"\n      ) {\n        let senderName = result.names.filter(\n          (j) => j.mobile_no == i.sender_mobile\n        );\n        let recieverName = result.names.filter(\n          (j) => j.mobile_no == i.reciever_mobile\n        );\n        console.log(\n          \"sender name: \",\n          senderName[0].fullName,\n          recieverName[0].fullName\n        );\n        return {\n          reciever_name: recieverName[0].fullName,\n          sender_name: senderName[0].fullName,\n          reciever_mobile: i.reciever_mobile,\n          sender_mobile: i.sender_mobile,\n          reciever_avatar: recieverName[0].avatarFlag,\n          sender_avatar: senderName[0].avatarFlag,\n        };\n      }\n    });\n\n    let listOfActiveRequests = result.result?.map((i) => {\n      if (\n        i.sender_mobile == sessionStorage.getItem(\"loggedInMobile\") &&\n        i.req_status == \"pending\"\n      ) {\n        console.log(\"something\");\n        let senderName = result.names.filter(\n          (j) => j.mobile_no == i.sender_mobile\n        );\n        let recieverName = result.names.filter(\n          (j) => j.mobile_no == i.reciever_mobile\n        );\n        console.log(\n          \"sender name: \",\n          senderName[0].fullName,\n          recieverName[0].fullName\n        );\n        return {\n          reciever_name: recieverName[0].fullName,\n          sender_name: senderName[0].fullName,\n          reciever_mobile: i.reciever_mobile,\n          sender_mobile: i.sender_mobile,\n          reciever_avatar: recieverName[0].avatarFlag,\n          sender_avatar: senderName[0].avatarFlag,\n        };\n      } else {\n        console.log(\"nothing\");\n        return null;\n      }\n    });\n    // console.log(\"requestList: \")\n\n    console.log(\"active requests: \", listOfActiveRequests);\n    console.log(\"pending requests: \", listOfPendingRequests);\n    if (listOfActiveRequests !== activeRequests) {\n      setActiveRequests(listOfActiveRequests);\n    }\n    if (listOfPendingRequests !== requests) {\n      setRequests(listOfPendingRequests);\n    }\n  }\n\n  async function deleteActiveRequest(reciever_mobile) {\n    userSocket.emit(\"delete_request\", {\n      sender_mobile: sessionStorage.getItem(\"loggedInMobile\"),\n      reciever_mobile: reciever_mobile,\n      socket_ID: userSocket.id,\n    });\n\n    // sender_mobile: sessionStorage.getItem(\"loggedInMobile\"),\n    //     reciever_mobile: reciever_mobile\n    // const result = await res.json();\n    // if (result.result == \"success\") {\n    //   pending_requests();\n    // }\n  }\n\n  // sends a friend request to the user with socket.\n  async function searchContact() {\n    userSocket.emit(\"sending_request\", {\n      sender_mobile: `${sessionStorage.getItem(\"loggedInMobile\")}`,\n      sender_username: `${sessionStorage.getItem(\"loggedInUser\")}`,\n      reciever_uniqueKey: `${friendsText}`,\n    });\n  }\n\n  return (\n    <div className=\"split-view\">\n      <div className=\"contacts-section bg-violet-50\">\n        <LeftNav function={openTab} pendingRequestcolor={pendingRequestcolor} />\n        <ChatHead\n          display={chatsDisplay}\n          loadMessages={loadMessages}\n          commonMsg={commonMsg}\n          setcommonMsg={setcommonMsg}\n          pendingMsg={pendingMsg}\n          setpendingMsg={setpendingMsg}\n          pending_text_in={pending_text_in}\n        />\n\n        <div className=\"friends-section bg-violet-50\" style={add_friendStyles}>\n          <FriendsDiv\n            friendsText={friendsText}\n            setfriendsText={setfriendsText}\n            searchContact={searchContact}\n            reqSentDisplay={reqSentDisplay}\n            setReqSentDisplay={setReqSentDisplay}\n            reqSentObj={reqSentObj}\n          />\n        </div>\n\n        <div className=\"pending_requests\" style={pendingRequestStyles}>\n          <PendingRequests\n            requests={requests}\n            requestList={requestList}\n            setRequestList={setRequestList}\n            respond_request={respond_request}\n            activeRequests={activeRequests}\n            deleteActiveRequest={deleteActiveRequest}\n          />\n        </div>\n      </div>\n\n      {Object.keys(currentContact).length > 0 ? (\n        <div className=\"chat-section\">\n          <>\n            <RightNav Unfriend={Unfriend} />\n            <Messages\n              commonMsg={commonMsg}\n              pendingMsg={pendingMsg}\n              className=\"messages_section \"\n              setcommonMsg={setcommonMsg}\n            />\n            <ChatInput\n              commonMsg={commonMsg}\n              setcommonMsg={setcommonMsg}\n              pendingMsg={pendingMsg}\n              setpendingMsg={setpendingMsg}\n              loadMessages={loadMessages}\n              textQueueOpen={textQueueOpen}\n              setTextQueueOpen={setTextQueueOpen}\n            />\n          </>\n        </div>\n      ) : (\n        <OnBoarding username={sessionStorage.getItem(\"loggedInUser\")} />\n      )}\n    </div>\n  );\n}\n\nexport default TextPage;\n","import React, { useState, useEffect } from \"react\";\nimport { AppContext } from \"../../AppContext\";\nimport { Spinner } from \"react-bootstrap\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n  Link,\n} from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport \"./Login.css\";\n\nfunction Login() {\n  const { userSocket, setuserSocket } = React.useContext(AppContext);\n\n  const history = useHistory();\n  const [mobile, setMobile] = useState();\n  const [email, setEmail] = useState();\n  const [username, setUsername] = useState();\n  const [socketID, setsocketID] = useState(\"\");\n  const [loadingDisplay, setLoadingDisplay] = useState(\"block\");\n  const [loginDisplay, setLoginDisplay] = useState(\"none\");\n  const [loginDivDisplay, setLoginDivDisplay] = useState(\"block\");\n  const [addDetailsDisplay, setaddDetailsDisplay] = useState(\"none\");\n\n  let loadingStyle = {\n    display: loadingDisplay,\n  }\n\n  let loginStyle = {\n    display: loginDisplay,\n  }\n\n  let addDetailsStyle = {\n    display: addDetailsDisplay,\n  }\n\n  let loginDivStyle = {\n    display: loginDivDisplay,\n  }\n\n  useEffect(async () => {\n\n    const socket = io(\"http://localhost:8080/\");\n\n    socket.on(\"connect\", () => {\n      console.log(`connected with id: ${socket.id}`);\n      //Sets the state after connection\n      setuserSocket(socket);\n      setsocketID(socket.id);\n\n      //checks if user is in sessionStorage and logs in directly \n      const localUsername = sessionStorage.getItem(\"loggedInUser\");\n      if (localUsername) {\n        setMobile(localUsername);\n        CheckSignin(localUsername, socket.id);\n      } else {\n        setLoadingDisplay(\"none\");\n        setLoginDisplay(\"block\");\n      }\n    });\n\n\n  }, []);\n\n  // if user is exists directly logs in, else asks for additional details.\n  async function CheckSignin(mobile_no, id) {\n\n    const res = await fetch(\"http://localhost:8080/login_user\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        mobile: mobile_no,\n        socketID: `${id}`,\n      }),\n    });\n\n    const result = await res.json();\n    console.log(await result);\n\n    // if user exists then login\n    if (result.result == \"success\") {\n      sessionStorage.setItem(\"loggedInUser\", `${mobile_no}`)\n      history.push(\"/textPage\");\n    }\n    //id new user ask additional info\n    else if (result.result == \"new user\") {\n      setaddDetailsDisplay(\"block\");\n      setLoginDivDisplay(\"none\");\n    }\n  }\n\n  // Sign in the newly created user\n  async function Signin() {\n    const res = await fetch(\"http://localhost:8080/user_details\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        username: username,\n        mobile: mobile,\n        socket_ID: socketID,\n      }),\n    });\n\n    const result = await res.json();\n    console.log(await result);\n    if (result.result == \"success\") {\n      sessionStorage.setItem(\"loggedInUser\", `${mobile}`);\n      history.push(\"/textPage\");\n    }\n  }\n\n  return (\n    <div className=\"login-page\">\n      <div className=\"loading-screen\" style={loadingStyle}>\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      </div>\n      <div className=\"Login\" style={loginStyle}>\n        <div className=\"text\">\n          <h1 className=\"login-heading\">Welcome to Converse!</h1>\n          <p className=\"login-desc\">Hi! Converse is a real time chat application that offers the basic functionality of chat\n          along with the features like groups, broadcast channels and more...\n          </p>\n          <hr className=\"hr\"></hr>\n\n          <div className=\"login-div\" style={loginDivStyle}>\n            <h1 className=\"login-heading\">Login with your mobile no: </h1>\n            <input\n              className=\"input-field\"\n              type=\"number\"\n              placeholder=\"Mobile No.\"\n              onChange={(e) => {\n                setMobile(e.target.value);\n              }}\n              value={mobile}\n            />\n            <button className=\"login-btn\" onClick={() => { CheckSignin(mobile, userSocket.id) }}>Login</button>\n          </div>\n\n\n          <div className=\"additional-details\" style={addDetailsStyle}>\n            <h1 className=\"login-heading\">We just need a few additional details...</h1>\n            <input\n              className=\"input-field\"\n              type=\"email\"\n              placeholder=\"email id.\"\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n              value={email}\n            />\n\n            <input\n              className=\"input-field\"\n              type=\"text\"\n              placeholder=\"Username\"\n              onChange={(e) => {\n                setUsername(e.target.value);\n              }}\n              value={username}\n\n            />\n\n            <button className=\"login-btn\" onClick={() => { Signin() }}>Login</button>\n\n          </div>\n\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { AppContext } from \"../../AppContext\";\n\nfunction Signup(props) {\n  const { userSocket } = React.useContext(AppContext);\n\n  const [fullName, setFullName] = useState(\"\");\n  const [fullNameValidation, setFullNameValidation] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [usernameValidation, setUsernameValidation] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailValidation, setEmailValidation] = useState(\"\");\n  const [mobile, setMobile] = useState(\"\");\n  const [mobileValidation, setMobileValidation] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordValidation, setPasswordValidation] = useState(\"\");\n\n  async function SignUp() {\n    const res = await fetch(\"http://localhost:8080/signup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        fullName: fullName,\n        username: userName,\n        email: email,\n        mobile: mobile,\n        password: password,\n        socket_ID: userSocket.id,\n      }),\n    });\n\n    const result = await res.json();\n    if (result.result == \"username already exists\") {\n      setUsernameValidation(\"username already exists\");\n    } else if (result.result == \"An account with this email already exists\") {\n      setEmailValidation(\"An account with this email already exists\");\n    } else if (\n      result.result == \"An account with this mobile no already exists\"\n    ) {\n      setMobileValidation(\"An account with this mobile no already exists\");\n    }\n  }\n\n  function validate() {\n    let validated = 0;\n    if (fullName.length == 0) {\n      setFullNameValidation(\"full Name is required\");\n    } else {\n      setFullNameValidation(\"\");\n      validated += 1;\n    }\n\n    if (userName.length == 0) {\n      setUsernameValidation(\"username is required\");\n    } else {\n      setUsernameValidation(\"\");\n      validated += 1;\n    }\n\n    if (email.length == 0) {\n      setEmailValidation(\"email is required\");\n    } else {\n      setEmailValidation(\"\");\n      validated += 1;\n    }\n\n    if (mobile.length == 0) {\n      setMobileValidation(\"mobile no is required\");\n    } else if (mobile.length < 10) {\n      setMobileValidation(\"invalid mobile no\");\n    } else {\n      setMobileValidation(\"\");\n      validated += 1;\n    }\n\n    if (password.length == 0) {\n      setPasswordValidation(\"password is required\");\n    } else if (password.length < 10) {\n      setPasswordValidation(\"password should be atleast 10 charracters long\");\n    } else {\n      setPasswordValidation(\"\");\n      validated += 1;\n    }\n\n    if (validated == 5) {\n      console.log(\"signing up\");\n      SignUp();\n    }\n  }\n\n  return (\n    <div className=\"w-100 px-4\">\n      <span className=\"font-bold text-4xl pl-2 border-l-4 border-red-400 text-gray-600\">\n        Get Started\n      </span>\n      <div>\n        <div>\n          <div className=\"pt-1 flex relative mt-12 \">\n            <input\n              type=\"text\"\n              className=\"form-input px-3 py-2.5 placeholder-blueGray-300 text-blueGray-600 relative border rounded border-blueGray-300 bg-transparent rounded text-sm outline-none focus:outline-none focus:ring w-full\"\n              onChange={(e) => {\n                setFullName(e.target.value);\n              }}\n              value={fullName}\n            />\n            <span className=\"absolute -top-1.5 bg-white px-1 ml-2 text-gray-500 text-sm\">\n              Full Name\n            </span>\n          </div>\n          <div className=\"p-0 m-0 text-sm text-red-500\">\n            <span>{fullNameValidation}</span>\n          </div>\n        </div>\n\n        <div>\n          <div className=\"pt-1 flex relative mt-4\">\n            <input\n              type=\"text\"\n              className=\"form-input px-3 py-2.5 placeholder-blueGray-300 text-blueGray-600 relative border rounded border-blueGray-300 bg-transparent rounded text-sm outline-none focus:outline-none focus:ring w-full\"\n              onChange={(e) => {\n                setUserName(e.target.value);\n              }}\n              value={userName}\n            />\n            <span className=\"absolute -top-1.5 bg-white px-1 ml-2 text-gray-500 text-sm\">\n              Username\n            </span>\n          </div>\n          <div className=\"p-0 m-0 text-sm text-red-500\">\n            <span>{usernameValidation}</span>\n          </div>\n        </div>\n\n        <div>\n          <div className=\"pt-1 flex relative mt-4\">\n            <input\n              type=\"email\"\n              className=\"form-input px-3 py-2.5 placeholder-blueGray-300 text-blueGray-600 relative border rounded border-blueGray-300 bg-transparent rounded text-sm outline-none focus:outline-none focus:ring w-full\"\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n              value={email}\n            />\n            <span className=\"absolute -top-1.5 bg-white px-1 ml-2 text-gray-500 text-sm\">\n              Email ID\n            </span>\n          </div>\n          <div className=\"p-0 m-0 text-sm text-red-500\">\n            <span>{emailValidation}</span>\n          </div>\n        </div>\n\n        <div>\n          <div className=\"pt-1 flex relative mt-4\">\n            <input\n              type=\"number\"\n              className=\"form-input px-3 py-2.5 placeholder-blueGray-300 text-blueGray-600 relative border rounded border-blueGray-300 bg-transparent rounded text-sm outline-none focus:outline-none focus:ring w-full\"\n              onChange={(e) => {\n                setMobile(e.target.value);\n              }}\n              value={mobile}\n            />\n            <span className=\"absolute -top-1.5 bg-white px-1 ml-2 text-gray-500 text-sm\">\n              Phone Number\n            </span>\n          </div>\n          <div className=\"p-0 m-0 text-sm text-red-500\">\n            <span>{mobileValidation}</span>\n          </div>\n        </div>\n\n        <div>\n          <div className=\"pt-1 flex relative mt-4\">\n            <input\n              type=\"password\"\n              className=\"form-input px-3 py-2.5 placeholder-blueGray-300 text-blueGray-600 relative border rounded border-blueGray-300 bg-transparent rounded text-sm outline-none focus:outline-none focus:ring w-full\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n              value={password}\n            />\n            <span className=\"absolute -top-1.5 bg-white px-1 ml-2 text-gray-500 text-sm\">\n              Password\n            </span>\n          </div>\n          <div className=\"p-0 m-0 text-sm text-red-500\">\n            <span>{passwordValidation}</span>\n          </div>\n        </div>\n\n        <div className=\"flex justify-center my-6\">\n          <button\n            onClick={validate}\n            className=\"py-2 rounded-md px-8 bg-violet-500 text-white font-bold focus:bg-violet-700 hover:bg-violet-600\"\n          >\n            Register\n          </button>\n        </div>\n        <div className=\"flex items-center\">\n          <hr />\n          <span className=\"px-2\">OR</span>\n          <hr />\n        </div>\n        <div className=\"flex justify-center items-center mt-6\">\n          <span>Already a user?</span>\n          <button\n            className=\"ml-4 hover:bg-violet-500 px-8 py-2 text-violet-700 hover:text-white border-2 border-violet-500 rounded-lg\"\n            onClick={() => props.setLoginSection(true)}\n          >\n            Login\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React, { useState } from \"react\";\nimport { AppContext } from \"../../AppContext\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    useHistory,\n    Link,\n} from \"react-router-dom\";\n\nexport async function AuthorizeUser(token, uniqueKey, socket_ID, setLoggedInUsername, setLoggedInMobile, history) {\n\n    const res = await fetch(\"http://localhost:8080/login_user\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"authorization\": `Bearer ${token}`,\n        },\n        body: JSON.stringify({\n            uniqueKey: uniqueKey,\n            socketID: socket_ID,\n        }),\n    });\n\n    const result = await res.json();\n    console.log(await result);\n\n    // if user exists then login\n    if (result.result == \"success\") {\n        console.log(\"successfull login!!!\", result);\n        sessionStorage.setItem(\"loggedInUser\", `${result.username}`)\n        sessionStorage.setItem(\"loggedInMobile\", `${result.mobile}`)\n        sessionStorage.setItem(\"loggedInAvatar\", `${result.avatar}`)\n        setLoggedInUsername(result.username);\n        setLoggedInMobile(result.mobile)\n        history.push(\"/textPage\");\n    }\n    //id new user ask additional info\n    else if (result.result == \"new user\") {\n        console.log(\"login failed\");\n        // setaddDetailsDisplay(\"block\");\n        // setLoginDivDisplay(\"none\");\n    }\n}\n\nfunction SignIn(props) {\n\n    const { userSocket, setLoggedInUsername, setLoggedInMobile } = React.useContext(AppContext);\n    const history = useHistory();\n    const [uniqueKey, setUniqueKey] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    async function SignIn() {\n        const res = await fetch(\"http://localhost:8080/signin\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                uniqueKey: uniqueKey,\n                password: password,\n            }),\n        });\n\n        const result = await res.json();\n        if (result.result === \"success\") {\n            console.log(\"got an access token: \", result);\n            sessionStorage.setItem(\"accessToken\", result.accessToken);\n            AuthorizeUser(result.accessToken, uniqueKey, userSocket.id, setLoggedInUsername, setLoggedInMobile, history);\n            // setLoggedInUsername(username);\n            // sessionStorage.setItem(\"loggedInUser\", username);\n            // history.push(\"/textPage\");\n            // AuthorizeUser(result.accessToken);\n        }\n    }\n\n\n\n\n    return (\n        <div className=\"w-100 px-4\">\n            <span className=\"font-bold text-4xl pl-2 border-l-4 border-red-400 text-gray-600\">\n                {/* Interested ?<br /> */}\n              Login\n            </span>\n            <div>\n                <div className=\"mb-3 pt-1 flex relative mt-12\">\n                    <input\n                        type=\"text\"\n                        className=\"form-input px-3 py-2.5 placeholder-blueGray-300 text-blueGray-600 relative border rounded border-blueGray-300 bg-transparent rounded text-sm outline-none focus:outline-none focus:ring w-full\"\n                        onChange={(e) => { setUniqueKey(e.target.value) }}\n                        value={uniqueKey}\n                    />\n                    <span className=\"absolute -top-1.5 bg-white px-1 ml-2 text-gray-500 text-sm\">\n                        Phone Number / Username\n                </span>\n                </div>\n                <div className=\"mb-3 pt-1 flex relative mt-4\">\n                    <input\n                        type=\"password\"\n                        className=\"form-input px-3 py-2.5 placeholder-blueGray-300 text-blueGray-600 relative border rounded border-blueGray-300 bg-transparent rounded text-sm outline-none focus:outline-none focus:ring w-full\"\n                        onChange={(e) => { setPassword(e.target.value) }}\n                        value={password}\n                    />\n                    <span className=\"absolute -top-1.5 bg-white px-1 ml-2 text-gray-500 text-sm\">\n                        Password\n                </span>\n                </div>\n                <div className=\"flex justify-center my-8\">\n                    <button onClick={SignIn} className=\"py-2 rounded-md px-8 bg-violet-500 text-white font-bold focus:bg-violet-700 hover:bg-violet-600\">\n                        Login\n                </button>\n                </div>\n                <div className=\"flex items-center\">\n                    <hr />\n                    <span className=\"px-2\">OR</span>\n                    <hr />\n                </div>\n                <div className=\"flex justify-center items-center mt-6\">\n                    <span>New to Converse?</span>\n                    <button\n                        className=\"ml-4 hover:bg-violet-500 px-8 py-2 text-violet-700 hover:text-white border-2 border-violet-500 rounded-lg\"\n                        onClick={() => props.setLoginSection(false)}\n                    >\n                        Register\n                </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SignIn;","import React, { useRef, useEffect, useState } from \"react\";\nimport { AppContext } from \"../AppContext\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n  Link,\n} from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport Signup from \"../components/Signup/Signup\";\nimport Signin, { AuthorizeUser } from \"../components/SignIn/Signin\";\n\nconst Tag = (props) => {\n  const ref = useRef(null);\n\n  return (\n    <>\n      <span className=\"text-gray-400 font-mono\" ref={ref}>\n        {\"<\"}\n        <span className=\"text-green-400\">{props.tagName}</span>\n        {\">\"}\n        {props.isLink ? (\n          <a\n            href={props.content}\n            className=\"text-violet-400 hover:text-violet-300\"\n            target=\"_blank\"\n          >\n            {props.content}\n          </a>\n        ) : (\n          <span className=\"text-white\">{props.content}</span>\n        )}\n        {\"</\"}\n        <span className=\"text-green-400\">{props.tagName}</span>\n        {\">\"}\n      </span>\n      <br />\n    </>\n  );\n};\n\nfunction Landing() {\n  const {\n    userSocket,\n    setuserSocket,\n    setLoggedInUsername,\n    setLoggedInMobile,\n    loggedInUsername,\n  } = React.useContext(AppContext);\n  const history = useHistory();\n  const [loginSection, setLoginSection] = React.useState(false);\n\n  useEffect(async () => {\n    const socket = io(\"http://localhost:8080/\");\n\n    socket.on(\"connect\", () => {\n      console.log(`connected with id: ${socket.id}`);\n      //Sets the state after connection\n      setuserSocket(socket);\n      // setsocketID(socket.id);\n      const token = sessionStorage.getItem(\"accessToken\");\n      const username = sessionStorage.getItem(\"loggedInUser\");\n      AuthorizeUser(\n        token,\n        username,\n        socket.id,\n        setLoggedInUsername,\n        setLoggedInMobile,\n        history\n      );\n      //TODO - checks if user is in session and logs in directly\n    });\n  }, []);\n\n  return (\n    <div className=\"grid grid-cols-10 h-screen\">\n      <div className=\"col-span-7 bg-violet-600 text-white flex justify-center items-center\">\n        <div className=\"px-20 py-12 pb-8 \">\n          <h1 className=\"text-6xl font-bold items-end flex tracking-wider\">\n            Hi there\n            <img src=\"/svg/wave.svg\" className=\"w-14 ml-2\" />,\n          </h1>\n          <h1 className=\"text-6xl font-bold items-end tracking-wider\">\n            Welcome to Converse\n            {/* <img src=\"/svg/logo.svg\" /> */}\n          </h1>\n          <h4 className=\"text-4xl font-thin font-mono mt-8 flex items-end\">\n            {\"</> Made with\"}\n            <img src=\"/svg/love.svg\" className=\"w-10 ml-2 mx-3\" /> {\"in React\"}\n          </h4>\n          <div className=\"mt-8 bg-blueGray-700 rounded-xl overflow-hidden shadow-2xl\">\n            <div className=\"bg-coolGray-600 p-3 items-center flex\">\n              <div className=\"rounded-full p-2.5 bg-red-400\"></div>\n              <div className=\"rounded-full p-2.5 bg-yellow-400 mx-2\"></div>\n              <div className=\"rounded-full p-2.5 bg-green-400\"></div>\n            </div>\n            <div className=\"px-4 pb-2 pt-2\">\n              <p className=\"\">\n                <Tag tagName=\"Version\" content=\" v.1.0.0 \" />\n                <Tag\n                  tagName=\"GithubRepo\"\n                  content=\"https://github.com/Sardar1208/chat\"\n                  isLink={true}\n                />\n                <Tag\n                  tagName=\"Description\"\n                  content={\n                    <div className=\"ml-4\">\n                      Currently, Converse is a Socket based chat application\n                      that connects users to other users and allows them to\n                      exchange text messages in real-time.\n                    </div>\n                  }\n                />\n                <Tag\n                  tagName=\"Features\"\n                  content={\n                    <div className=\"ml-4 list-decimal block\">\n                      <li>Invite/Request based follower system</li>\n                      <li>Handles offline user's messages</li>\n                    </div>\n                  }\n                />\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"py-12 px-4 col-span-3 bg-white flex justify-center items-center \">\n        {loginSection ? (\n          // Login Component\n          <Signin setLoginSection={setLoginSection} />\n        ) : (\n          // Signup Component\n          <Signup setLoginSection={setLoginSection} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Landing;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport ChatHead from \"./components/ChatHeads/ChatHead.js\";\nimport TextPage from \"./components/TextPage/TextPage.js\";\nimport Login from \"./components/Login/Login.js\";\nimport Landing from \"./Pages/Landing.js\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { AppContext } from \"./AppContext\";\n\n// function Test() {\n//   return (\n//     <div className=\"bg-cyan-400 m-8 p-8 text-white font-bold text-center text-4xl\">\n//       {\" \"}\n//       Testing Tailwind (Check App.js Test Component)\n//     </div>\n//   );\n// }\nfunction App() {\n  const [contacts, setContacts] = React.useState([]);\n  const [currentContact, setCurrentContact] = React.useState({});\n  const [userSocket, setuserSocket] = React.useState(null);\n  const [unreadCount, setUnreadCount] = React.useState({});\n  const [loggedInUsername, setLoggedInUsername] = React.useState(\"\");\n  const [loggedInMobile, setLoggedInMobile] = React.useState(\"\");\n  const [conversationIds, setConversationIds] = React.useState([]);\n  const [textQueue, setTextQueue] = React.useState([]);\n  const lastElmRef = React.useRef(null);\n\n  // const []\n  const AppState = {\n    contacts,\n    setContacts,\n    currentContact,\n    setCurrentContact,\n    userSocket,\n    setuserSocket,\n    unreadCount,\n    setUnreadCount,\n    conversationIds,\n    setConversationIds,\n    loggedInUsername,\n    setLoggedInUsername,\n    loggedInMobile,\n    setLoggedInMobile,\n    lastElmRef,\n    textQueue,\n    setTextQueue,\n  };\n  return (\n    <AppContext.Provider value={AppState}>\n      <Router>\n        <div className=\"App\"></div>\n\n        <Switch>\n          <Route path=\"/\" exact component={Landing} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/textPage\" component={TextPage} />\n        </Switch>\n      </Router>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function dsfsfdfdsfsfsf\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}